# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

#stages:
#    - deploy
#
#before_script:
#    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#    - eval $(ssh-agent -s)
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#
#deploy-dev-job:
#    stage: deploy
#    only:
#        - dev
#    script:
#        - echo "$DEPLOY_PRIVATE_SSH_KEY_DEV" | tr -d '\r' | ssh-add -
#        - echo "Deploying the DEV project..."
#        - ssh -tt -o StrictHostKeyChecking=no -p ${DEPLOY_PORT_DEV:-22} ${DEPLOY_HOST_DEV} \
#            "cd ${DEPLOY_PATH_DEV:-/root/sites/${PROJECT_NAME}-dev/} &&
#            git reset --hard &&
#            git pull origin dev &&
#            docker compose down &&
#            docker compose --env-file=.env.local up -d --build &&
#            docker compose exec php composer install &&
#            docker compose exec php bin/console ask:deploy"
#
#deploy-prod-job:
#    stage: deploy
#    only:
#        - main
#    script:
#        - echo "${DEPLOY_PRIVATE_SSH_KEY_PROD:-$DEPLOY_PRIVATE_SSH_KEY_DEV}" | tr -d '\r' | ssh-add -
#        - echo "Deploying the PROD project..."
#        - ssh -tt -o StrictHostKeyChecking=no -p ${DEPLOY_PORT_PROD:-${DEPLOY_PORT_DEV:-22}} ${DEPLOY_HOST_PROD:-$DEPLOY_HOST_DEV} \
#            "cd ${DEPLOY_PATH_PROD:-/root/sites/${PROJECT_NAME}/} &&
#            git reset --hard &&
#            git pull origin main &&
#            docker compose down &&
#            docker compose up -d --build &&
#            docker compose --profile backup up -d --build &&
#            docker compose exec php composer install &&
#            docker compose exec php bin/console ask:deploy"
